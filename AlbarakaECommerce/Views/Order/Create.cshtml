@model AlbarakaECommerce.Models.Order

@{
    ViewBag.Title = "Create";
}

@{ 
    List<SelectListItem> customerList = new List<SelectListItem>();

    foreach (var item in ViewBag.listCustomers)
    {
        customerList.Add(new SelectListItem
        {
            Text = item.customerName + " " + item.customerSurname,
            Value = item.id.ToString()
        });
    }

    List<SelectListItem> productsList = new List<SelectListItem>();

    foreach (var item in ViewBag.listProducts)
    {
        productsList.Add(new SelectListItem
        {
            Text = item.productName,
            Value = item.productId.ToString()
        });
    }
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Customer.id, customerList, "-- Select A Buyer --", new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.Customer.id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Products", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("products", productsList, "-- Select A Product --", new { @class = "form-control", @required = "required" })
                @Html.TextBox("amount", null, new { @class = "form-control", @type = "number", @required = "required" })
                @Html.ValidationMessageFor(model => model.OrderProductCons, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", @type = "number", @required = "required" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipmentAdress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipmentAdress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.shipmentAdress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.paymentway, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.paymentway, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.paymentway, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.orderState, new { htmlAttributes = new { @class = "form-control", @value = "preparing"} })
                @Html.ValidationMessageFor(model => model.orderState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shipment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shipment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shipment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.validity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.validity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.validity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
